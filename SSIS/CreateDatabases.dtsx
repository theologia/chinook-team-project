<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/27/2022 7:22:48 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-7QGC74AB"
  DTS:CreatorName="LAPTOP-7QGC74AB\ig_13"
  DTS:DTSID="{8262EA2E-DD83-47AE-AFCF-7672397F8163}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="8192"
  DTS:ObjectName="CreateDatabases"
  DTS:PackageType="5"
  DTS:VersionBuild="20"
  DTS:VersionGUID="{376BA809-82DE-4645-9163-2D08C33559D2}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-N2V4FNOH]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{AEF087D1-93E5-4C17-9163-C1C0ACA65C18}"
      DTS:ObjectName="LAPTOP-N2V4FNOH">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-N2V4FNOH;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-N2V4FNOH 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{19809D2B-0151-4F82-9662-347D943C171D}"
      DTS:ObjectName="LAPTOP-N2V4FNOH 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-N2V4FNOH;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create DW"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{41d16027-5a87-4783-a012-ab174f06b222}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create DW"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AEF087D1-93E5-4C17-9163-C1C0ACA65C18}"
          SQLTask:SqlStatementSource="CREATE DATABASE [ChinookDW]&#xA;GO&#xA;&#xA;use [ChinookDW]&#xA;go &#xA;&#xA;create table DimCustomer (&#xA;    CustomerKey INT IDENTITY(1,1) NOT NULL PRIMARY KEY,&#xA;&#x9;CustomerId INT NOT NULL,&#xA;&#x9;FirstName VARCHAR(50) NOT NULL,&#xA;&#x9;LastName VARCHAR(50) NOT NULL,&#xA;&#x9;Company VARCHAR(50) DEFAULT 'N/A' NOT NULL,&#xA;&#x9;Address VARCHAR(50) NOT NULL,&#xA;&#x9;City VARCHAR(50)  NOT NULL,&#xA;&#x9;State VARCHAR(50)  DEFAULT 'N/A' NOT NULL,&#xA;&#x9;Country VARCHAR(50) NOT NULL,&#xA;&#x9;PostalCode VARCHAR(50) DEFAULT 'N/A' NOT NULL,&#xA;&#x9;Phone VARCHAR(50) DEFAULT 'N/A' NOT NULL,&#xA;&#x9;Fax VARCHAR(50)  DEFAULT 'N/A' NOT NULL,&#xA;&#x9;Email VARCHAR(50) NOT NULL,&#xA;&#x9;EmployeeId int NOT NULL,&#xA;&#x9;EmplLastName VARCHAR(50) NOT NULL,&#xA;&#x9;EmplFirstName VARCHAR(50) NOT NULL,&#xA;&#x9;Title VARCHAR(50) NOT NULL,&#xA;&#x9;ReportsTo int NOT NULL,&#xA;&#x9;BirthDate VARCHAR(50) NOT NULL,&#xA;&#x9;HireDate VARCHAR(50) NOT NULL,&#xA;&#x9;EmplAddress VARCHAR(50) NOT NULL,&#xA;&#x9;EmplCity VARCHAR(50) NOT NULL,&#xA;&#x9;EmplState VARCHAR(50) NOT NULL,&#xA;&#x9;EmplCountry VARCHAR(50) NOT NULL,&#xA;&#x9;EmplPostalCode VARCHAR(50) NOT NULL,&#xA;&#x9;EmplPhone VARCHAR(50) NOT NULL,&#xA;&#x9;EmplFax VARCHAR(50) NOT NULL,&#xA;&#x9;EmplEmail VARCHAR(50) NOT NULL,&#xA;&#x9;RowIsCurrent INT DEFAULT 1 NOT NULL,&#xA;&#x9;RowStartDate DATE DEFAULT '1899-12-31' NOT NULL,&#xA;&#x9;RowEndDate DATE DEFAULT '9999-12-31' NOT NULL,&#xA;&#x9;RowChangeReason VARCHAR(200) NULL&#xA;);&#xA;&#xA;&#xA;create table DimTrack(&#xA;  TrackKey INT IDENTITY(1,1) NOT NULL PRIMARY KEY,&#xA;  TrackId INT NOT NULL,&#xA;  TrackName nvarchar(200) NOT NULL,&#xA;  Composer nvarchar(220) DEFAULT 'N/A' NOT NULL,&#xA;  Milliseconds int NOT NULL,&#xA;  Bytes int NOT NULL,&#xA;  UnitPrice numeric(10,2) NOT NULL,&#xA;  GenreName nvarchar(120) NOT NULL,&#xA;  MediaTtpeName nvarchar(120) NOT NULL,&#xA;  Title nvarchar(160) NOT NULL,&#xA;  ArtistName nvarchar(120) DEFAULT 'N/A' NOT NULL,&#xA;  PlayListName nvarchar(120) NOT NULL,&#xA;  RowisCurrent INT DEFAULT 1 NOT NULL,&#xA;  RowStartDate DATE DEFAULT '1899-12-31' NOT NULL,&#xA;  RowEndDate DATE DEFAULT '9999-12-31' NOT NULL,&#xA;  RowChangeReason VARCHAR(200) NULL&#xA;);&#xA;&#xA;create table FactSales(&#xA;  InvoiceLineId INT NOT NULL,&#xA;  CustomerKey INT NOT NULL,&#xA;  TrackKey INT NOT NULL,&#xA;  InvoiceDateKey INT NOT NULL,&#xA;  BillingAddress NVARCHAR(70) NOT NULL,&#xA;  BillingCity NVARCHAR(40) NOT NULL,&#xA;  BillingState NVARCHAR(40) DEFAULT 'N/A' NOT NULL,&#xA;  BillingCountry NVARCHAR(40) NOT NULL,&#xA;  BillingPostalCode NVARCHAR(40) DEFAULT 'N/A' NOT NULL,&#xA;  Total NUMERIC NOT NULL,&#xA;  UnitPrice NUMERIC NOT NULL,&#xA;  Quantity INT NOT NULL&#xA;);&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create Staging"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{d37c0bdc-1a8f-4d66-a505-6a9b934ec2d1}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create Staging"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AEF087D1-93E5-4C17-9163-C1C0ACA65C18}"
          SQLTask:SqlStatementSource="CREATE DATABASE [StagingChinook]&#xA;GO&#xA;&#xA;use [StagingChinook]&#xA;go &#xA;&#xA;&#xA;create table Customer(&#xA;  CustomerId int primary key,&#xA;  FirstName nvarchar(50),&#xA;  LastName nvarchar(50),&#xA;  Company nvarchar(50),&#xA;  Address nvarchar(50),&#xA;  City nvarchar(50),&#xA;  State nvarchar(50),&#xA;  Country nvarchar(50),&#xA;  PostalCode nvarchar(50),&#xA;  Phone nvarchar(50),&#xA;  Fax nvarchar(50),&#xA;  Email nvarchar(50),&#xA;  EmployeeId int,&#xA;  EmplLastName nvarchar(50),&#xA;  EmplFirstName nvarchar(50),&#xA;  Title nvarchar(50),&#xA;  ReportsTo int,&#xA;  BirthDate date,&#xA;  HireDate date,&#xA;  EmplAddress nvarchar(50),&#xA;  EmplCity nvarchar(50),&#xA;  EmplState nvarchar(50),&#xA;  EmplCountry nvarchar(50),&#xA;  EmplPostalCode nvarchar(50),&#xA;  EmplPhone nvarchar(50),&#xA;  EmplFax nvarchar(50),&#xA;  EmplEmail nvarchar(50),&#xA;);&#xA;&#xA;create table Track(&#xA; TrackId int,&#xA; Name nvarchar(200),&#xA; Composer nvarchar(220),&#xA; Milliseconds int,&#xA; Bytes int,&#xA; UnitPrice numeric(10,2),&#xA; GenreName nvarchar(120),&#xA; MediaTtpeName nvarchar(120),&#xA; Title nvarchar(160),&#xA; ArtistName nvarchar(120),&#xA; PlayListName nvarchar(120),&#xA;);&#xA;&#xA;&#xA;create table Sales(&#xA;  InvoiceLineId int primary key,&#xA;  InvoiceId int ,&#xA;  CustomerId int,&#xA;  InvoiceDate date,&#xA;  BillingAddress nvarchar(70),&#xA;  BillingCity nvarchar(40),&#xA;  BillingState nvarchar(40),&#xA;  BillingCountry nvarchar(40),&#xA;  BillingPostalCode nvarchar(40),&#xA;  Total numeric,&#xA;  TrackId int,&#xA;  UnitPrice numeric,&#xA;  Quantity int&#xA;);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Dates"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{61f7083e-116b-4af9-a5d6-df65da5447c3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Dates"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AEF087D1-93E5-4C17-9163-C1C0ACA65C18}"
          SQLTask:SqlStatementSource="--Creating the date dimension as a table in MSSQL&#xA;-- provides the UK and USA holidays&#xA;--Specify Start Date and End date here&#xA;--Value of Start Date Must be Less than Your End Date&#xA;use StagingChinook&#xA;go&#xA; &#xA;&#xA;DECLARE @StartDate DATETIME = '2009-01-01' --Starting value of Date Range&#xA;DECLARE @EndDate DATETIME = '2013-12-22' --End Value of Date Range&#xA; &#xA;--Select DATEPART(QQ , Getdate()) as DayOfMonthValue&#xA;--Select CONVERT (char(8),Getdate(),112)&#xA; &#xA;--DATEPART(DW, @CurrentDate)&#xA;--Select CONVERT (char(10),Getdate(),103)&#xA;--select DATENAME(DW, '16-aug-2013') AS DayName&#xA;--select DATEPART(DW, '16-aug-2013') AS DayNumber&#xA; &#xA;--select DATEPART(WW, '16-aug-2013') AS WeekOfYear&#xA; &#xA;&#xA;DROP TABLE if exists [dbo].[DimDate]&#xA; &#xA;&#xA;/**********************************************************************************/&#xA; &#xA;CREATE TABLE [dbo].[DimDate]&#xA;( [DateKey] INT primary key,&#xA;[Date] DATETIME,&#xA;[FullDateGREECE] CHAR(10), -- Date in dd-MM-yyyy format&#xA;[FullDateUSA] CHAR(10),-- Date in MM-dd-yyyy format&#xA;[DayOfMonth] VARCHAR(2), -- Field will hold day number of Month&#xA;[DaySuffix] VARCHAR(4), -- Apply suffix as 1st, 2nd ,3rd etc&#xA;[DayName] VARCHAR(9), -- Contains name of the day, Sunday, Monday&#xA;[DayOfWeekUSA] CHAR(1),-- First Day Sunday=1 and Saturday=7&#xA;[DayOfWeekGREECE] CHAR(1),-- First Day Monday=1 and Sunday=7&#xA;[DayOfWeekInMonth] VARCHAR(2), --1st Monday or 2nd Monday in Month&#xA;[DayOfWeekInYear] VARCHAR(2),&#xA;[DayOfQuarter] VARCHAR(3),&#xA;[DayOfYear] VARCHAR(3),&#xA;[WeekOfMonth] VARCHAR(1),-- Week Number of Month&#xA;[WeekOfQuarter] VARCHAR(2), --Week Number of the Quarter&#xA;[WeekOfYear] VARCHAR(2),--Week Number of the Year&#xA;[Month] VARCHAR(2), --Number of the Month 1 to 12&#xA;[MonthName] VARCHAR(9),--January, February etc&#xA;[MonthOfQuarter] VARCHAR(2),-- Month Number belongs to Quarter&#xA;[Quarter] CHAR(1),&#xA;[QuarterName] VARCHAR(9),--First,Second..&#xA;[Year] CHAR(4),-- Year value of Date stored in Row&#xA;[YearName] CHAR(7), --CY 2012,CY 2013&#xA;[MonthYear] CHAR(10), --Jan-2013,Feb-2013&#xA;[MMYYYY] CHAR(6),&#xA;[FirstDayOfMonth] DATE,&#xA;[LastDayOfMonth] DATE,&#xA;[FirstDayOfQuarter] DATE,&#xA;[LastDayOfQuarter] DATE,&#xA;[FirstDayOfYear] DATE,&#xA;[LastDayOfYear] DATE,&#xA;[IsHolidayUSA] BIT,-- Flag 1=National Holiday, 0-No National Holiday&#xA;[IsWeekday] BIT,-- 0=Week End ,1=Week Day&#xA;[HolidayUSA] VARCHAR(50),--Name of Holiday in US&#xA;[IsHolidayGREECE] BIT Null, -- Flag 1=National Holiday, 0-No National Holiday&#xA;[HolidayGREECE] VARCHAR(50) Null --Name of Holiday in GREECE&#xA;)&#xA;;&#xA; &#xA;/********************************************************************************************/&#xA; &#xA;--Temporary Variables To Hold the Values During Processing of Each Date of Year&#xA;DECLARE&#xA;@DayOfWeekInMonth INT,&#xA;@DayOfWeekInYear INT,&#xA;@DayOfQuarter INT,&#xA;@WeekOfMonth INT,&#xA;@CurrentYear INT,&#xA;@CurrentMonth INT,&#xA;@CurrentQuarter INT&#xA; &#xA;/*Table Data type to store the day of week count for the month and year*/&#xA;DECLARE @DayOfWeek TABLE (DOW INT, MonthCount INT, QuarterCount INT, YearCount INT)&#xA; &#xA;INSERT INTO @DayOfWeek VALUES (1, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (2, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (3, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (4, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (5, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (6, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (7, 0, 0, 0)&#xA; &#xA;--Extract and assign part of Values from Current Date to Variable&#xA; &#xA;DECLARE @CurrentDate AS DATETIME = @StartDate&#xA;SET @CurrentMonth = DATEPART(MM, @CurrentDate)&#xA;SET @CurrentYear = DATEPART(YY, @CurrentDate)&#xA;SET @CurrentQuarter = DATEPART(QQ, @CurrentDate)&#xA; &#xA;/********************************************************************************************/&#xA;--Proceed only if Start Date(Current date ) is less than End date you specified above&#xA; &#xA;WHILE @CurrentDate &lt;= @EndDate&#xA;BEGIN&#xA;/*Begin day of week logic*/&#xA; &#xA; /*Check for Change in Month of the Current date if Month changed then&#xA;Change variable value*/&#xA;IF @CurrentMonth != DATEPART(MM, @CurrentDate)&#xA;BEGIN&#xA;UPDATE @DayOfWeek&#xA;SET MonthCount = 0&#xA;SET @CurrentMonth = DATEPART(MM, @CurrentDate)&#xA;END&#xA; &#xA; --&#xA;/* Check for Change in Quarter of the Current date if Quarter changed then change&#xA;Variable value*/&#xA; &#xA; IF @CurrentQuarter != DATEPART(QQ, @CurrentDate)&#xA;BEGIN&#xA;UPDATE @DayOfWeek&#xA;SET QuarterCount = 0&#xA;SET @CurrentQuarter = DATEPART(QQ, @CurrentDate)&#xA;END&#xA;/* Check for Change in Year of the Current date if Year changed then change&#xA;Variable value*/&#xA; &#xA; IF @CurrentYear != DATEPART(YY, @CurrentDate)&#xA;BEGIN&#xA;UPDATE @DayOfWeek&#xA;SET YearCount = 0&#xA;SET @CurrentYear = DATEPART(YY, @CurrentDate)&#xA;END&#xA;-- Set values in table data type created above from variables&#xA; &#xA; UPDATE @DayOfWeek&#xA;SET&#xA;MonthCount = MonthCount + 1,&#xA;QuarterCount = QuarterCount + 1,&#xA;YearCount = YearCount + 1&#xA;WHERE DOW = DATEPART(DW, @CurrentDate)&#xA; &#xA; SELECT&#xA;@DayOfWeekInMonth = MonthCount,&#xA;@DayOfQuarter = QuarterCount,&#xA;@DayOfWeekInYear = YearCount&#xA;FROM @DayOfWeek&#xA;WHERE DOW = DATEPART(DW, @CurrentDate)&#xA;/*End day of week logic*/&#xA; &#xA;/* Populate Your Dimension Table with values*/&#xA;INSERT INTO [dbo].[DimDate]&#xA;SELECT&#xA;CONVERT (char(8),@CurrentDate,112) as DateKey,&#xA;@CurrentDate AS Date,&#xA;CONVERT (char(10),@CurrentDate,103) as FullDateGREECE,&#xA;CONVERT (char(10),@CurrentDate,101) as FullDateUSA,&#xA;DATEPART(DD, @CurrentDate) AS DayOfMonth,&#xA;--Apply Suffix values like 1st, 2nd 3rd etc..&#xA;CASE&#xA;WHEN DATEPART(DD,@CurrentDate) IN (11,12,13) THEN CAST(DATEPART(DD,@CurrentDate) AS VARCHAR) + 'th'&#xA;WHEN RIGHT(DATEPART(DD,@CurrentDate),1) = 1 THEN CAST(DATEPART(DD,@CurrentDate) AS VARCHAR) + 'st'&#xA;WHEN RIGHT(DATEPART(DD,@CurrentDate),1) = 2 THEN CAST(DATEPART(DD,@CurrentDate) AS VARCHAR) + 'nd'&#xA;WHEN RIGHT(DATEPART(DD,@CurrentDate),1) = 3 THEN CAST(DATEPART(DD,@CurrentDate) AS VARCHAR) + 'rd'&#xA;ELSE CAST(DATEPART(DD,@CurrentDate) AS VARCHAR) + 'th'&#xA;END AS DaySuffix,&#xA;DATENAME(DW, @CurrentDate) AS DayName,&#xA;DATEPART(DW, @CurrentDate) AS DayOfWeekUSA,&#xA;-- check for day of week as Per US and change it as per UK format&#xA;CASE DATEPART(DW, @CurrentDate)&#xA;WHEN 1 THEN 7&#xA;WHEN 2 THEN 1&#xA;WHEN 3 THEN 2&#xA;WHEN 4 THEN 3&#xA;WHEN 5 THEN 4&#xA;WHEN 6 THEN 5&#xA;WHEN 7 THEN 6&#xA;END&#xA;AS DayOfWeekGREECE,&#xA;@DayOfWeekInMonth AS DayOfWeekInMonth,&#xA;@DayOfWeekInYear AS DayOfWeekInYear,&#xA;@DayOfQuarter AS DayOfQuarter,&#xA;DATEPART(DY, @CurrentDate) AS DayOfYear,&#xA;DATEPART(WW, @CurrentDate) + 1 - DATEPART(WW, CONVERT(VARCHAR, DATEPART(MM, @CurrentDate)) + '/1/' + CONVERT(VARCHAR, DATEPART(YY, @CurrentDate))) AS WeekOfMonth,&#xA;(DATEDIFF(DD, DATEADD(QQ, DATEDIFF(QQ, 0, @CurrentDate), 0), @CurrentDate) / 7) + 1 AS WeekOfQuarter,&#xA;DATEPART(WW, @CurrentDate) AS WeekOfYear,&#xA;DATEPART(MM, @CurrentDate) AS Month,&#xA;DATENAME(MM, @CurrentDate) AS MonthName,&#xA;CASE&#xA;WHEN DATEPART(MM, @CurrentDate) IN (1, 4, 7, 10) THEN 1&#xA;WHEN DATEPART(MM, @CurrentDate) IN (2, 5, 8, 11) THEN 2&#xA;WHEN DATEPART(MM, @CurrentDate) IN (3, 6, 9, 12) THEN 3&#xA;END AS MonthOfQuarter,&#xA;DATEPART(QQ, @CurrentDate) AS Quarter,&#xA;CASE DATEPART(QQ, @CurrentDate)&#xA;WHEN 1 THEN 'First'&#xA;WHEN 2 THEN 'Second'&#xA;WHEN 3 THEN 'Third'&#xA;WHEN 4 THEN 'Fourth'&#xA;END AS QuarterName,&#xA;DATEPART(YEAR, @CurrentDate) AS Year,&#xA;'CY ' + CONVERT(VARCHAR, DATEPART(YEAR, @CurrentDate)) AS YearName,&#xA;LEFT(DATENAME(MM, @CurrentDate), 3) + '-' + CONVERT(VARCHAR, DATEPART(YY, @CurrentDate)) AS MonthYear,&#xA;RIGHT('0' + CONVERT(VARCHAR, DATEPART(MM, @CurrentDate)),2) + CONVERT(VARCHAR, DATEPART(YY, @CurrentDate)) AS MMYYYY,&#xA;CONVERT(DATETIME, CONVERT(DATE, DATEADD(DD, - (DATEPART(DD, @CurrentDate) - 1), @CurrentDate))) AS FirstDayOfMonth,&#xA;CONVERT(DATETIME, CONVERT(DATE, DATEADD(DD, - (DATEPART(DD, (DATEADD(MM, 1, @CurrentDate)))), DATEADD(MM, 1, @CurrentDate)))) AS LastDayOfMonth,&#xA;DATEADD(QQ, DATEDIFF(QQ, 0, @CurrentDate), 0) AS FirstDayOfQuarter,&#xA;DATEADD(QQ, DATEDIFF(QQ, -1, @CurrentDate), -1) AS LastDayOfQuarter,&#xA;CONVERT(DATETIME, '01/01/' + CONVERT(VARCHAR, DATEPART(YY, @CurrentDate))) AS FirstDayOfYear,&#xA;CONVERT(DATETIME, '12/31/' + CONVERT(VARCHAR, DATEPART(YY, @CurrentDate))) AS LastDayOfYear,&#xA;NULL AS IsHolidayUSA,&#xA;CASE DATEPART(DW, @CurrentDate)&#xA;WHEN 1 THEN 0&#xA;WHEN 2 THEN 1&#xA;WHEN 3 THEN 1&#xA;WHEN 4 THEN 1&#xA;WHEN 5 THEN 1&#xA;WHEN 6 THEN 1&#xA;WHEN 7 THEN 0&#xA;END AS IsWeekday,&#xA;NULL AS HolidayUSA, Null, Null&#xA; &#xA; SET @CurrentDate = DATEADD(DD, 1, @CurrentDate)&#xA;END&#xA; &#xA; &#xA;/*Add HOLIDAYS GREECE*/&#xA; &#xA;--Πρωτοχρονιά&#xA;   UPDATE [dbo].[DimDate]&#xA;       SET HolidayGREECE='Πρωτοχρονιά'&#xA;       WHERE [Month] = 1 AND [DayOfMonth]  = 1&#xA; &#xA;--Θεοφάνεια&#xA;  UPDATE [dbo].[DimDate]&#xA;       SET HolidayGREECE='Θεοφάνεια'&#xA;       WHERE [Month] = 1 AND [DayOfMonth]  = 6  &#xA; &#xA;--Ευαγγελισμός της Θεοτόκου&#xA;  UPDATE [dbo].[DimDate]&#xA;       SET HolidayGREECE='Ευαγγελισμός της Θεοτόκου'&#xA;       WHERE [Month] = 3 AND [DayOfMonth]  =25  &#xA; &#xA;--Εργατική Πρωτομαγιά&#xA;  UPDATE [dbo].[DimDate]&#xA;       SET HolidayGREECE='Εργατική Πρωτομαγιά'&#xA;       WHERE [Month] = 5 AND [DayOfMonth]  =1&#xA; &#xA;--Κοίμηση της Θεοτόκου&#xA;  UPDATE [dbo].[DimDate]&#xA;       SET HolidayGREECE='Κοίμηση της Θεοτόκου'&#xA;       WHERE [Month] = 8 AND [DayOfMonth]  =15&#xA; &#xA;--Ημέρα του Όχι&#xA;  UPDATE [dbo].[DimDate]&#xA;       SET HolidayGREECE='Ημέρα του Όχι'&#xA;       WHERE [Month] = 10 AND [DayOfMonth]  =28&#xA; &#xA;--Χριστούγεννα&#xA;UPDATE [dbo].[DimDate]&#xA;       SET HolidayGREECE='Χριστούγεννα'&#xA;       WHERE [Month] = 12 AND [DayOfMonth]  =25&#xA;--Σύναξη της Θεοτόκου&#xA;UPDATE [dbo].[DimDate]&#xA;       SET HolidayGREECE='Σύναξη της Θεοτόκου'&#xA;       WHERE [Month] = 12 AND [DayOfMonth]  =26&#xA; &#xA;UPDATE [dbo].[DimDate] &#xA;      SET IsHolidayGREECE = CASE WHEN HolidayGREECE IS NULL THEN 0 WHEN HolidayGREECE IS NOT NULL THEN 1 END &#xA;      &#xA;/*Add HOLIDAYS USA*/&#xA;/*THANKSGIVING - Fourth THURSDAY in November*/&#xA;UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'Thanksgiving Day'&#xA;WHERE&#xA;[Month] = 11&#xA;AND [DayOfWeekUSA] = 'Thursday'&#xA;AND DayOfWeekInMonth = 4&#xA; &#xA; /*CHRISTMAS*/&#xA;UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'Christmas Day'&#xA;WHERE [Month] = 12 AND [DayOfMonth] = 25&#xA; &#xA; /*4th of July*/&#xA;UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'Independance Day'&#xA;WHERE [Month] = 7 AND [DayOfMonth] = 4&#xA; &#xA; /*New Years Day*/&#xA;UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'New Year''s Day'&#xA;WHERE [Month] = 1 AND [DayOfMonth] = 1&#xA; &#xA; /*Memorial Day - Last Monday in May*/&#xA;UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'Memorial Day'&#xA;FROM [dbo].[DimDate]&#xA;WHERE DateKey IN&#xA;(&#xA;SELECT&#xA;MAX(DateKey)&#xA;FROM [dbo].[DimDate]&#xA;WHERE&#xA;[MonthName] = 'May'&#xA;AND [DayOfWeekUSA] = 'Monday'&#xA;GROUP BY&#xA;[Year],&#xA;[Month]&#xA;)&#xA; &#xA; /*Labor Day - First Monday in September*/&#xA;UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'Labor Day'&#xA;FROM [dbo].[DimDate]&#xA;WHERE DateKey IN&#xA;(&#xA;SELECT&#xA;MIN(DateKey)&#xA;FROM [dbo].[DimDate]&#xA;WHERE&#xA;[MonthName] = 'September'&#xA;AND [DayOfWeekUSA] = 'Monday'&#xA;GROUP BY&#xA;[Year],&#xA;[Month]&#xA;)&#xA; &#xA; /*Valentine's Day*/&#xA;UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'Valentine''s Day'&#xA;WHERE&#xA;[Month] = 2&#xA;AND [DayOfMonth] = 14&#xA; &#xA; /*Saint Patrick's Day*/&#xA;UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'Saint Patrick''s Day'&#xA;WHERE&#xA;[Month] = 3&#xA;AND [DayOfMonth] = 17&#xA; &#xA; /*Martin Luthor King Day - Third Monday in January starting in 1983*/&#xA;UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'Martin Luthor King Jr Day'&#xA;WHERE&#xA;[Month] = 1&#xA;AND [DayOfWeekUSA] = 'Monday'&#xA;AND [Year] &gt;= 1983&#xA;AND DayOfWeekInMonth = 3&#xA; &#xA; /*President's Day - Third Monday in February*/&#xA;UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'President''s Day'&#xA;WHERE&#xA;[Month] = 2&#xA;AND [DayOfWeekUSA] = 'Monday'&#xA;AND DayOfWeekInMonth = 3&#xA; &#xA; /*Mother's Day - Second Sunday of May*/&#xA;UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'Mother''s Day'&#xA;WHERE&#xA;[Month] = 5&#xA;AND [DayOfWeekUSA] = 'Sunday'&#xA;AND DayOfWeekInMonth = 2&#xA; &#xA; /*Father's Day - Third Sunday of June*/&#xA;UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'Father''s Day'&#xA;WHERE&#xA;[Month] = 6&#xA;AND [DayOfWeekUSA] = 'Sunday'&#xA;AND DayOfWeekInMonth = 3&#xA; &#xA; /*Halloween 10/31*/&#xA;UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'Halloween'&#xA;WHERE&#xA;[Month] = 10&#xA;AND [DayOfMonth] = 31&#xA; &#xA; /*Election Day - The first Tuesday after the first Monday in November*/&#xA;BEGIN&#xA;DECLARE @Holidays TABLE (ID INT IDENTITY(1,1), DateID int, Week TINYINT, YEAR CHAR(4), DAY CHAR(2))&#xA; &#xA; INSERT INTO @Holidays(DateID, [Year],[Day])&#xA;SELECT&#xA;DateKey,&#xA;[Year],&#xA;[DayOfMonth]&#xA;FROM [dbo].[DimDate]&#xA;WHERE&#xA;[Month] = 11&#xA;AND [DayOfWeekUSA] = 'Monday'&#xA;ORDER BY&#xA;YEAR,&#xA;DayOfMonth&#xA; &#xA; DECLARE @CNTR INT, @POS INT, @STARTYEAR INT, @ENDYEAR INT, @MINDAY INT&#xA; &#xA; SELECT&#xA;@CURRENTYEAR = MIN([Year])&#xA;, @STARTYEAR = MIN([Year])&#xA;, @ENDYEAR = MAX([Year])&#xA;FROM @Holidays&#xA; &#xA; WHILE @CURRENTYEAR &lt;= @ENDYEAR&#xA;BEGIN&#xA;SELECT @CNTR = COUNT([Year])&#xA;FROM @Holidays&#xA;WHERE [Year] = @CURRENTYEAR&#xA; &#xA; SET @POS = 1&#xA; &#xA; WHILE @POS &lt;= @CNTR&#xA;BEGIN&#xA;SELECT @MINDAY = MIN(DAY)&#xA;FROM @Holidays&#xA;WHERE&#xA;[Year] = @CURRENTYEAR&#xA;AND [Week] IS NULL&#xA; &#xA; UPDATE @Holidays&#xA;SET [Week] = @POS&#xA;WHERE&#xA;[Year] = @CURRENTYEAR&#xA;AND [Day] = @MINDAY&#xA; &#xA; SELECT @POS = @POS + 1&#xA;END&#xA; &#xA; SELECT @CURRENTYEAR = @CURRENTYEAR + 1&#xA;END&#xA; &#xA; UPDATE [dbo].[DimDate]&#xA;SET HolidayUSA = 'Election Day'&#xA;FROM [dbo].[DimDate] DT&#xA;JOIN @Holidays HL ON (HL.DateID + 1) = DT.DateKey&#xA;WHERE&#xA;[Week] = 1&#xA;END&#xA;UPDATE [dbo].[DimDate]&#xA;SET IsHolidayUSA = CASE WHEN HolidayUSA IS NULL THEN 0 WHEN HolidayUSA IS NOT NULL THEN 1 END&#xA; &#xA;/*******************************************************************************************************************************************************/&#xA;select * from DimDate&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{7BA9D53B-03BD-412E-99D5-DC1E655E1D56}"
      DTS:From="Package\Create Staging"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Create DW" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{3411470A-11B8-49B0-BC4B-13BE2B0733A1}"
      DTS:From="Package\Create DW"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Load Dates" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="130,42"
          Id="Package\Create DW"
          TopLeft="297.142861181376,159.070588213845" />
        <NodeLayout
          Size="148,42"
          Id="Package\Create Staging"
          TopLeft="289.285718190427,56.1764705346117" />
        <NodeLayout
          Size="131,42"
          Id="Package\Load Dates"
          TopLeft="289.285718190427,245.611764459214" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="362.714289685902,98.1764705346117">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.8941176792333"
              Start="0,0"
              End="0,53.3941176792333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.3941176792333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="358.464289685902,201.070588213845">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.541176245369"
              Start="0,0"
              End="0,37.041176245369">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.041176245369" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>